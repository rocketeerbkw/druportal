<?php

/**
 * Implementation of hook_migrate_api().
 */
function druportal_migrate_migrate_api() {
  $api = array(
    'api' => 2,
  );
  return $api;
}

/**
 * Create base class for all druportal migrations to extend from
 */
abstract class DruportalMigration extends Migration {
  public function __construct() {
    parent::__construct();
    $this->team = array(
      new MigrateTeamMember('Brandon Williams', 'rocketeerbkw@gmail.com', t('Developer')),
    );
    $this->issuePattern = 'http://drupal.org/node/:id:';
  }

  /**
   * Convert dates stored in Skyportal(TM) to unix epoch timestamp
   */
  public function spDateConvert($date) {
    // SP stores (or access exports) dates like this 20061016013032
    // which is the same as 2006/10/16 01:30:32
    $year   = $date[0] . $date[1] . $date[2] . $date[3];
    $month  = $date[4] . $date[5];
    $day    = $date[6] . $date[7];
    $hour   = $date[8] . $date[9];
    $min    = $date[10] . $date[11];
    $sec    = $date[12] . $date[13];

    return strtotime($year . '/' . $month . '/' . $day . ' ' . $hour . ':' . $min . ':' . $sec);
  }

  /**
   * Returns correct number of rows in CSV file depending on presence of header row
   */
  public function csvCount($file) {
    // TODO. If this takes too much time/memory, use exec('wc -l')
    $count = count(file($file));
    return $count;
  }
}

class DruportalMigrateSourceCSV extends MigrateSourceCSV {
  public function __construct($path, array $csvcolumns = array(), array $options = array(), array $fields = array()) {
    parent::__construct($path, $csvcolumns, $options, $fields);
  }

  /**
   * Returns correct number of rows in CSV file depending on presence of header row
   */
  public function count($refresh = FALSE) {
    // TODO. If this takes too much time/memory, use exec('wc -l')
    $file = file($this->file);

    if (!$file) {
      return 0;
    }

    $count = count($file);

    // If our first defined field is in the first line of CSV it's probably a header row
    // Don't count header rows as they won't be imported
    if (stristr($file[0], key($this->fields()))) {
      $count--;
    }

    return $count;
  }
}