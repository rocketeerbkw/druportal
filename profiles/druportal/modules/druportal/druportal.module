<?php

/**
 * Implementation of hook_menu().
 **/
function druportal_menu() {
  $items = array();

  $items['admin/content/druportal'] = array(
    'title' => 'Druportal',
    'description' => 'Manage DruPortal',
    'page callback' => 'druportal_dashboard',
    'access callback' => TRUE,
    'file' => 'druportal_pages.inc',
  );
  $items['admin/content/druportal/dashboard'] = array(
    'title' => 'Dashboard',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/druportal/settings'] = array(
    'title' => 'Settings',
    'description' => 'Migrate module settings',
    'weight' => 5,
    'page callback' => 'druportal_settings',
    'access callback' => TRUE,
    'file' => 'migrate_pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  
  return $items;
}

/**
 * Implementaiton of hook_views_api().
 **/
//function druportal_views_api()
//{
  //$data = array(
    //'api' => 2.0
  //);
  //return $data;
//}

/**
 * Implementation of hook_migrate_prepare_user().
 **/
function druportal_migrate_prepare_user(&$user, $tblinfo, $row)
{
  watchdog('druportal', print_r(array($user, $tblinfo, $row), true));

  if ($tblinfo->machine_name == 'sp_portal_members') {
    $user['created'] = _druportal_sp_date_convert($row->sp_portal_members_M_DATE);
    $user['access'] = _druportal_sp_date_convert($row->sp_portal_members_M_LASTHEREDATE);
    $user['login'] = $user['access'];

    // Need to clear out empty strings
    if (isset($row->profile_fields) && is_array($row->profile_fields)) {
      foreach ($row->profile_fields as $category => &$fields) {
        foreach ($fields as &$field) {
          $field = trim($field);
        }
      }
    }

    if (isset($row->sp_portal_members_M_AGE) && trim($row->sp_portal_members_M_AGE) !== '') {
      // Convert date into array
      $bd = explode('/', $row->sp_portal_members_M_AGE);
      $birthdate = array('month' => $bd[0], 'day' => $bd[1], 'year' => $bd[2]);
      $row->profile_fields['Basics']['profile_basics_birthdate'] = $birthdate;
    } else {
      $row->profile_fields['Basics']['profile_basics_birthdate'] = array();
    }
  }
}

/**
 * Implementation of hook_migrate_prepare_node().
 **/
function druportal_migrate_prepare_node(&$node, $tblinfo, $row) {
  watchdog('druportal', print_r(array($node, $tblinfo, $row), true));
  // If importing PORTAL_TOPICS table, we need to map users
  // and taxonomy terms (what forum) correctly
  // We also need to translate dates from SP format to unix
  // epoch time
  if ($tblinfo->machine_name == 'sp_portal_topics') {
    $authorId = db_result(db_query("SELECT destid FROM {migrate_map_sp_portal_members} WHERE sourceid = %d", $row->sp_portal_topics_T_AUTHOR));
    $node->uid = ($authorId > 0 ? $authorId : 1);
    $account = user_load(array('uid' => $node->uid));
    $node->name = $account->name;

    $forumId = db_result(db_query("SELECT destid FROM {migrate_map_sp_portal_forum WHERE sourceid = %d", $row->sp_portal_topics_FORUM_ID));
    $node->taxonomy = array($forumId);

    // We also need to adjust the creation date
    $node->created = _druportal_sp_date_convert($row->sp_portal_topics_T_DATE);
  }
}

/**
 * Implementation of hook_migrate_prepare_comment().
 **/
function druportal_migrate_prepare_comment(&$comment, $tblinfo, $row) {
  watchdog('druportal', print_r(array($comment, $row), true));

  // If importing PORTAL_REPLY we need to translate SP dates
  if ($tblinfo->machine_name == 'sp_portal_reply') {
    $comment['timestamp'] = _druportal_sp_date_convert($row->sp_portal_reply_R_DATE);
  }
}

/**
 * Implementation hook_migrate_prepare_term().
 **/
function druportal_migrate_prepare_term(&$term, $tblinfo, $row) {
  // If importing PORTAL_FORUM table, we need to use the
  // PORTAL_CATEGORY maps table to find the parent ID
  if ($tblinfo->machine_name == 'sp_portal_forum') {
    $curParent = $term['parent'];
    $parent = db_result(db_query("SELECT destid FROM {migrate_map_sp_portal_category} WHERE sourceid = %d", $row->sp_portal_forum_CAT_ID));
    $term['parent'] = ($parent >= 0 ? $parent : 0);
  }
}

/**
 * Implementation hook_migrate_complete_term().
 **/
function druportal_migrate_complete_term(&$term, $tblinfo, $row) {
  // If importing PORTAL_CATEGORY table, make the imported
  // terms into containers
  if ($tblinfo->machine_name == 'sp_portal_category') {
    $containers = variable_get('forum_containers', array());
    $containers[] = $term['tid'];
    variable_set('forum_containers', $containers);
  }

}

/**
 * Implementation of hook_migrate_prepare_privatemsg().
 **/
function druportal_migrate_prepare_privatemsg(&$msg, $tblinfo, $row)
{
  if ($tblinfo->machine_name == 'sp_portal_pm') {
    // Get the correct UID for author and recipient from the members
    // mapping table
    $authorId = db_result(db_query("SELECT destid FROM {migrate_map_sp_portal_members} WHERE sourceid = %d", $row->sp_portal_pm_M_FROM));
    $msg->author = ($authorId > 0 ? $authorId : 1);
    $recipientId = db_result(db_query("SELECT destid FROM {migrate_map_sp_portal_members} WHERE sourceid = %d", $row->sp_portal_pm_M_TO));
    $msg->recipient = ($recipientId > 0 ? $recipientId : 1);

    // Fix timestamp
    $msg->timestamp = _druportal_sp_date_convert($row->sp_portal_pm_M_SENT);

    // Flip READ bit to correlate with NEW bit
    $read = (int) $row->sp_portal_pm_M_READ;
    $msg->is_new = $read ? 0 : 1;

    // The privatemsg migrate module runs it's own prepare function
    // It's imperative that our function run before it, so check
    // if it's been run and override if it has
    if (isset($msg->new_thread)) {
      //privatemsg_migrate_prepare_privatemsg($msg, $tblinfo, $row);
    }
  }
}

/**
 * Convert dates stored in Skyportal to unix epoch timestamp
 **/
function _druportal_sp_date_convert($date) {
  // SP stores (or access exports) dates like this 20061016013032
  // which is the same as 2006/10/16 01:30:32
  $year   = $date[0] . $date[1] . $date[2] . $date[3];
  $month  = $date[4] . $date[5];
  $day    = $date[6] . $date[7];
  $hour   = $date[8] . $date[9];
  $min    = $date[10] . $date[11];
  $sec    = $date[12] . $date[13];

  return strtotime($year . '/' . $month . '/' . $day . ' ' . $hour . ':' . $min . ':' . $sec);
}

function _druportal_import_files() {
  $features = array(
    'settings' => array(),
    'members' => array('portal_members'),
    'privmsg' => array('portal_pm'),
    'forums' => array(
      'portal_category', 'portal_forum', 'portal_topics', 
      'portal_reply', 'portal_archive_topics', 'portal_archive_reply'
    ),
  );
}
